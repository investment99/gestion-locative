const { createClient } = require('@supabase/supabase-js');
const config = require('./supabase-config.js');

const supabase = createClient(config.url, config.anonKey, config.options);

async function verifierLocataire() {
  console.log('üîç Recherche du locataire cayenne99@gmail.com...\n');
  
  try {
    // Chercher le locataire
    const { data: tenant, error } = await supabase
      .from('tenants')
      .select('*')
      .eq('email', 'cayenne99@gmail.com');
    
    if (error) {
      console.error('‚ùå Erreur:', error);
      return;
    }
    
    if (!tenant || tenant.length === 0) {
      console.log('‚ùå Aucun locataire trouv√© avec cet email.');
      console.log('\nüí° Solutions possibles:');
      console.log('1. V√©rifiez que vous avez bien cr√©√© le locataire dans l\'app desktop');
      console.log('2. L\'app desktop n\'est peut-√™tre pas connect√©e √† Supabase');
      console.log('3. Cr√©ons le locataire directement dans Supabase');
      
      console.log('\nüìù Voulez-vous que je cr√©e ce locataire maintenant ? (avec une agence de test)');
      
    } else {
      console.log('‚úÖ Locataire trouv√© !');
      console.log('D√©tails:', tenant[0]);
      console.log('\nüîë Mot de passe enregistr√©:', tenant[0].password);
      
      if (tenant[0].password !== '123456') {
        console.log('\n‚ö†Ô∏è  Le mot de passe dans la base est diff√©rent de celui que vous avez indiqu√©.');
        console.log('Essayez avec le mot de passe:', tenant[0].password);
      }
    }
    
    // V√©rifier aussi les agences
    console.log('\nüè¢ V√©rification des agences...');
    const { data: agencies, error: agError } = await supabase
      .from('agencies')
      .select('id, name, email');
    
    if (agencies && agencies.length > 0) {
      console.log('Agences disponibles:');
      agencies.forEach(a => console.log(`- ${a.name} (${a.email})`));
    } else {
      console.log('Aucune agence trouv√©e.');
    }
    
  } catch (err) {
    console.error('Erreur:', err);
  }
}

verifierLocataire(); 